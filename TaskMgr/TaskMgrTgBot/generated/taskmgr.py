# *************************************************************************
# Data classes automatically generated by python-odata library
# Generated on 2023/11/19 01:00 from http://localhost:8000/OData/$metadata
#
# Please do not manually modify this file as any changes you make
# will be overwritten when the file is generated again.
# *************************************************************************

import datetime
import uuid
import decimal

from odata.entity import EntityBase
from odata.property import StringProperty, IntegerProperty, NavigationProperty, DatetimeProperty, DecimalProperty, FloatProperty, BooleanProperty, UUIDProperty


class ReflectionBase(EntityBase):
    pass


# ************ Start type definitions ************
class User(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.User"
  
    # Simple properties
    Name: str = StringProperty("Name")
    TelegramId: str = StringProperty("TelegramId")
    UserId: int = IntegerProperty("UserId", primary_key=True)

    # Navigation properties
    Comments: list["Comment"] = NavigationProperty(name="Comments", entity_package="generated.taskmgr", entitycls="Comment", collection=True)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class Card(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Card"
  
    # Simple properties
    CardId: int = IntegerProperty("CardId", primary_key=True)
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    Due: datetime.datetime = DatetimeProperty("Due")
    Complete: datetime.datetime = DatetimeProperty("Complete")
    Tags: list[StringProperty] = StringProperty("Tags", is_collection=True)
    SectionId: int = IntegerProperty("SectionId")
    Created: datetime.datetime = DatetimeProperty("Created")

    # Navigation properties
    Comments: list["Comment"] = NavigationProperty(name="Comments", entity_package="generated.taskmgr", entitycls="Comment", collection=True)
    Section: "Section" = NavigationProperty(name="Section", entity_package="generated.taskmgr", entitycls="Section", foreign_key=SectionId)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)


class Comment(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Comment"
  
    # Simple properties
    CommentId: int = IntegerProperty("CommentId", primary_key=True)
    Description: str = StringProperty("Description")
    UserId: int = IntegerProperty("UserId")
    CardId: int = IntegerProperty("CardId")

    # Navigation properties
    Card: "Card" = NavigationProperty(name="Card", entity_package="generated.taskmgr", entitycls="Card", foreign_key=CardId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


class Role(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Role"
  
    # Simple properties
    RoleId: int = IntegerProperty("RoleId", primary_key=True)
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    AllowTables: list[StringProperty] = StringProperty("AllowTables", is_collection=True)

    # Navigation properties
    RightRoles: list["RightRole"] = NavigationProperty(name="RightRoles", entity_package="generated.taskmgr", entitycls="RightRole", collection=True)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class Section(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Section"
  
    # Simple properties
    Title: str = StringProperty("Title")
    ProjectId: int = IntegerProperty("ProjectId")
    SectionId: int = IntegerProperty("SectionId", primary_key=True)

    # Navigation properties
    Cards: list["Card"] = NavigationProperty(name="Cards", entity_package="generated.taskmgr", entitycls="Card", collection=True)
    Project: "Project" = NavigationProperty(name="Project", entity_package="generated.taskmgr", entitycls="Project", foreign_key=ProjectId)


class Project(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Project"
  
    # Simple properties
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    ProjectId: int = IntegerProperty("ProjectId", primary_key=True)

    # Navigation properties
    Sections: list["Section"] = NavigationProperty(name="Sections", entity_package="generated.taskmgr", entitycls="Section", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class UserCard(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.UserCard"
  
    # Simple properties
    UserCardId: int = IntegerProperty("UserCardId", primary_key=True)
    UserId: int = IntegerProperty("UserId")
    CardId: int = IntegerProperty("CardId")
    RoleId: int = IntegerProperty("RoleId")

    # Navigation properties
    Card: "Card" = NavigationProperty(name="Card", entity_package="generated.taskmgr", entitycls="Card", foreign_key=CardId)
    Role: "Role" = NavigationProperty(name="Role", entity_package="generated.taskmgr", entitycls="Role", foreign_key=RoleId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


class UserProject(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.UserProject"
  
    # Simple properties
    UserProjectId: int = IntegerProperty("UserProjectId", primary_key=True)
    UserId: int = IntegerProperty("UserId")
    ProjectId: int = IntegerProperty("ProjectId")
    RoleId: int = IntegerProperty("RoleId")

    # Navigation properties
    Project: "Project" = NavigationProperty(name="Project", entity_package="generated.taskmgr", entitycls="Project", foreign_key=ProjectId)
    Role: "Role" = NavigationProperty(name="Role", entity_package="generated.taskmgr", entitycls="Role", foreign_key=RoleId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


class RightRole(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.RightRole"
  
    # Simple properties
    RightRoleId: int = IntegerProperty("RightRoleId", primary_key=True)
    RightId: int = IntegerProperty("RightId")
    RoleId: int = IntegerProperty("RoleId")

    # Navigation properties
    Right: "Right" = NavigationProperty(name="Right", entity_package="generated.taskmgr", entitycls="Right", foreign_key=RightId)
    Role: "Role" = NavigationProperty(name="Role", entity_package="generated.taskmgr", entitycls="Role", foreign_key=RoleId)


class Right(ReflectionBase):
    __odata_collection__ = None
    __odata_type__ = "TaskMgrAPI.Models.Right"
  
    # Simple properties
    RightId: int = IntegerProperty("RightId", primary_key=True)
    Title: str = StringProperty("Title")

    # Navigation properties
    RightRoles: list["RightRole"] = NavigationProperty(name="RightRoles", entity_package="generated.taskmgr", entitycls="RightRole", collection=True)


# ************ End type definitions ************


# ************ Start entity definitions ************
class Users(ReflectionBase):
    __odata_collection__ = "Users"
    __odata_type__ = "TaskMgrAPI.Models.User"
  
    # Simple properties
    Name: str = StringProperty("Name")
    TelegramId: str = StringProperty("TelegramId")
    UserId: int = IntegerProperty("UserId", primary_key=True)

    # Navigation properties
    Comments: list["Comment"] = NavigationProperty(name="Comments", entity_package="generated.taskmgr", entitycls="Comment", collection=True)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class Cards(ReflectionBase):
    __odata_collection__ = "Cards"
    __odata_type__ = "TaskMgrAPI.Models.Card"
  
    # Simple properties
    CardId: int = IntegerProperty("CardId", primary_key=True)
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    Due: datetime.datetime = DatetimeProperty("Due")
    Complete: datetime.datetime = DatetimeProperty("Complete")
    Tags: list[StringProperty] = StringProperty("Tags", is_collection=True)
    SectionId: int = IntegerProperty("SectionId")
    Created: datetime.datetime = DatetimeProperty("Created")

    # Navigation properties
    Comments: list["Comment"] = NavigationProperty(name="Comments", entity_package="generated.taskmgr", entitycls="Comment", collection=True)
    Section: "Section" = NavigationProperty(name="Section", entity_package="generated.taskmgr", entitycls="Section", foreign_key=SectionId)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)


class Comments(ReflectionBase):
    __odata_collection__ = "Comments"
    __odata_type__ = "TaskMgrAPI.Models.Comment"
  
    # Simple properties
    CommentId: int = IntegerProperty("CommentId", primary_key=True)
    Description: str = StringProperty("Description")
    UserId: int = IntegerProperty("UserId")
    CardId: int = IntegerProperty("CardId")

    # Navigation properties
    Card: "Card" = NavigationProperty(name="Card", entity_package="generated.taskmgr", entitycls="Card", foreign_key=CardId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


class Roles(ReflectionBase):
    __odata_collection__ = "Roles"
    __odata_type__ = "TaskMgrAPI.Models.Role"
  
    # Simple properties
    RoleId: int = IntegerProperty("RoleId", primary_key=True)
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    AllowTables: list[StringProperty] = StringProperty("AllowTables", is_collection=True)

    # Navigation properties
    RightRoles: list["RightRole"] = NavigationProperty(name="RightRoles", entity_package="generated.taskmgr", entitycls="RightRole", collection=True)
    UserCards: list["UserCard"] = NavigationProperty(name="UserCards", entity_package="generated.taskmgr", entitycls="UserCard", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class Sections(ReflectionBase):
    __odata_collection__ = "Sections"
    __odata_type__ = "TaskMgrAPI.Models.Section"
  
    # Simple properties
    Title: str = StringProperty("Title")
    ProjectId: int = IntegerProperty("ProjectId")
    SectionId: int = IntegerProperty("SectionId", primary_key=True)

    # Navigation properties
    Cards: list["Card"] = NavigationProperty(name="Cards", entity_package="generated.taskmgr", entitycls="Card", collection=True)
    Project: "Project" = NavigationProperty(name="Project", entity_package="generated.taskmgr", entitycls="Project", foreign_key=ProjectId)


class Projects(ReflectionBase):
    __odata_collection__ = "Projects"
    __odata_type__ = "TaskMgrAPI.Models.Project"
  
    # Simple properties
    Title: str = StringProperty("Title")
    Description: str = StringProperty("Description")
    ProjectId: int = IntegerProperty("ProjectId", primary_key=True)

    # Navigation properties
    Sections: list["Section"] = NavigationProperty(name="Sections", entity_package="generated.taskmgr", entitycls="Section", collection=True)
    UserProjects: list["UserProject"] = NavigationProperty(name="UserProjects", entity_package="generated.taskmgr", entitycls="UserProject", collection=True)


class UserCards(ReflectionBase):
    __odata_collection__ = "UserCards"
    __odata_type__ = "TaskMgrAPI.Models.UserCard"
  
    # Simple properties
    UserCardId: int = IntegerProperty("UserCardId", primary_key=True)
    UserId: int = IntegerProperty("UserId")
    CardId: int = IntegerProperty("CardId")
    RoleId: int = IntegerProperty("RoleId")

    # Navigation properties
    Card: "Card" = NavigationProperty(name="Card", entity_package="generated.taskmgr", entitycls="Card", foreign_key=CardId)
    Role: "Role" = NavigationProperty(name="Role", entity_package="generated.taskmgr", entitycls="Role", foreign_key=RoleId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


class UserProjects(ReflectionBase):
    __odata_collection__ = "UserProjects"
    __odata_type__ = "TaskMgrAPI.Models.UserProject"
  
    # Simple properties
    UserProjectId: int = IntegerProperty("UserProjectId", primary_key=True)
    UserId: int = IntegerProperty("UserId")
    ProjectId: int = IntegerProperty("ProjectId")
    RoleId: int = IntegerProperty("RoleId")

    # Navigation properties
    Project: "Project" = NavigationProperty(name="Project", entity_package="generated.taskmgr", entitycls="Project", foreign_key=ProjectId)
    Role: "Role" = NavigationProperty(name="Role", entity_package="generated.taskmgr", entitycls="Role", foreign_key=RoleId)
    User: "User" = NavigationProperty(name="User", entity_package="generated.taskmgr", entitycls="User", foreign_key=UserId)


# ************ End entity definitions ************

